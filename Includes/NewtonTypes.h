/*	File:		NewtonTypes.h	Contains:	Global types for Newton C++ Tools build system	Written by:	The Newton Tools group	Copyright:	© 1992-1995 by Apple Computer, Inc.  All rights reserved.		 */#ifndef __NEWTONTYPES_H#define __NEWTONTYPES_H#if defined(__cplusplus)		#if defined(__arm) || defined(__SC__) || (!defined(applec) && !defined(SINGLEOBJECT))		/* non-MPW CFront compilers (e.g. DOS) need this so our classes will compile */		class SingleObject {};		#define SINGLEOBJECT 1	#endif#endif/* Base types */#ifndef __boolean_defined__	typedef unsigned char	Boolean;#endiftypedef char			Char;			/* In ARM6 C compiler char is unsigned char */typedef signed char		SChar;typedef unsigned char 	UChar;#ifndef __byte_defined__	typedef signed char		Byte;#endiftypedef signed char		SByte;typedef unsigned char	UByte;typedef short			Short;			/* In ANSI C short is signed short */typedef signed short	SShort;typedef unsigned short	UShort;typedef long			Long;			/* In ANSI C long is signed long */typedef signed long		SLong;typedef unsigned long	ULong;typedef signed long		FastInt;#define FASTINT_MIN		(~0x7fffffff)	/* -2147483648 and 0x80000000 are unsigned */    									/* minimum value for an object of type FastInt */#define	FASTINT_MAX		0x7FFFFFFF		/* maximum value for an object of type FastInt */#ifndef __unichar_defined__	typedef unsigned short	UniChar;#endiftypedef UniChar			Character;/* Pointer types */#ifndef __ptr_defined__	typedef char*			Ptr;#endif#ifndef __handle_defined__	typedef Ptr*			Handle;#endif#ifndef __procptr_defined__	typedef long			(*ProcPtr)();#endiftypedef long NewtonErr;		/* needs to hold error codes less than -32767 *//* Math types */typedef struct Int64{	SLong	hi;	ULong	lo;} Int64;#ifndef __fixed_defined__	typedef long Fixed;#endif#ifndef __fract_defined__	typedef long Fract;#endif/* Graphics types */#ifndef __point_defined__	struct Point	{		short 	v;		short 	h;	};	typedef struct Point Point;#endif#ifndef __rect_defined__	struct Rect	{		short	top;		short	left;		short	bottom;		short	right;	};	typedef struct Rect Rect;#endifstruct FPoint{	Fixed 	x;	Fixed	y;};typedef struct FPoint FPoint;struct FRect{	Fixed	left;	Fixed	top;	Fixed	right;	Fixed	bottom;};typedef struct FRect FRect;/* Constants */#ifndef nil	#define nil		NULL#endif#if !(defined(__arm) && defined(__cplusplus))#ifndef __boolean_defined__	enum	{		false,		true	};#endif#endif#endif /* __NEWTONTYPES_H */