// =========== Header ===========// File:				CompactState.h// Project:				NewtonDev// Written by:			Paul Guyot (pguyot@kallisys.net)//// Created on:			05/22/2001// Internal version:	1// ===========// =========== Change History ===========// 05/22/2001	v1	[PG]	Creation of the file// ===========#ifndef __COMPACTSTATE_H#define __COMPACTSTATE_H// Apple hasn't included this header which is referenced from VirtualMemory.h// I guess SCompactState should be defined here. I guess this file should be in the PSS folder.// This object is part of the SGlobalsThatLiveAcrossReboot. Unfortunately, I don't know its size. I just know// it's very probably 100 bytes long. I may try to find out more about it. But do we really need it?// BTW, it's rather a struct. But I don't like structs with methods attached to it.class SCompactState{private:	// These functions are in the Patchable Jump Table, but you can't call them since they're not in the Public Jump Table.	void	Init( void );		// Initializes the struct	Boolean	InProgress( void );	Boolean	IsValid( void );	// Return true if the struct has been initialized (if both mMagicKey and mOtherMagicKey are set properly)	enum {		kMagicKey		=	'bltg',	// Bacon, Lettuce, Tomato and Garlic		kOtherMagicKey	=	'zarf'	};		ULong	mMagicKey;	// Should be kMagicKey	ULong	mUnknown_1;	ULong	mUnknown_2;	ULong	mUnknown_3;	ULong	mUnknown_4;	ULong	mOtherMagicKey;	// Should be kOtherMagicKey	ULong	mUnknown_more[20];};#endif		// __COMPACTSTATE_H// ========================================== //// Tomorrow's computers some time next month. ////                 -- DEC                     //// ========================================== //